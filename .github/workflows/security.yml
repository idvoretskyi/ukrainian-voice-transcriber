name: Security & Quality Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Monday at 6 AM UTC

permissions:
  contents: read
  security-events: write
  actions: read
  pull-requests: write

env:
  GO_VERSION: '1.24'

jobs:
  # Combined security analysis with matrix strategy
  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    
    strategy:
      fail-fast: false
      matrix:
        tool: [gosec, trivy, govulncheck]
        include:
          - tool: gosec
            output_format: sarif
            output_file: gosec-results.sarif
            command: gosec -fmt sarif -out gosec-results.sarif ./...
          - tool: trivy
            output_format: sarif
            output_file: trivy-results.sarif
            command: trivy fs --format sarif --output trivy-results.sarif .
          - tool: govulncheck
            output_format: text
            output_file: ""
            command: govulncheck ./...
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install security tools
      run: |
        case "${{ matrix.tool }}" in
          gosec)
            go install github.com/securego/gosec/v2/cmd/gosec@latest
            echo "$HOME/go/bin" >> $GITHUB_PATH
            ;;
          trivy)
            # Trivy will be installed by the action
            ;;
          govulncheck)
            go install golang.org/x/vuln/cmd/govulncheck@latest
            echo "$HOME/go/bin" >> $GITHUB_PATH
            ;;
        esac

    - name: Run security scan - ${{ matrix.tool }}
      run: |
        case "${{ matrix.tool }}" in
          gosec)
            ${{ matrix.command }}
            ;;
          trivy)
            # Use trivy action for better reliability
            ;;
          govulncheck)
            ${{ matrix.command }}
            ;;
        esac
      continue-on-error: true

    - name: Run Trivy vulnerability scanner
      if: matrix.tool == 'trivy'
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload SARIF results - ${{ matrix.tool }}
      if: matrix.output_format == 'sarif'
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ matrix.output_file }}
        category: ${{ matrix.tool }}

  # CodeQL Analysis (separate due to special requirements)
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: go
        config-file: ./.github/codeql/codeql-config.yml

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:go"
        output: sarif-results
        upload: false

    - name: Filter SARIF results
      uses: advanced-security/filter-sarif@v1
      with:
        patterns: |
          -**/testdata/**
          -**/*_test.go
          -vendor/**
          -docs/**
          -*.md
        input: sarif-results/go.sarif
        output: sarif-results/go.sarif

    - name: Upload filtered SARIF results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: sarif-results/go.sarif

  # Dependency Review (PR only)
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate
        comment-summary-in-pr: always