name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.2.0)'
        required: true
        type: string
      release_type:
        description: 'Type of release'
        required: true
        default: 'minor'
        type: choice
        options:
          - patch
          - minor
          - major
      prerelease:
        description: 'Mark as pre-release'
        required: false
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate version format
        run: |
          if [[ ! "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid version format. Use semantic versioning (e.g., 1.2.0)"
            exit 1
          fi

      - name: Check if tag exists
        run: |
          if git rev-parse "v${{ github.event.inputs.version }}" >/dev/null 2>&1; then
            echo "❌ Tag v${{ github.event.inputs.version }} already exists"
            exit 1
          fi

      - name: Create and push tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create annotated tag
          git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
          git push origin "v${{ github.event.inputs.version }}"
          
          echo "✅ Created and pushed tag v${{ github.event.inputs.version }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Ukrainian Voice Transcriber v${{ github.event.inputs.version }}
          body: |
            ## Ukrainian Voice Transcriber v${{ github.event.inputs.version }}
            
            🚀 **Release Type**: ${{ github.event.inputs.release_type }}
            
            ### What's New
            - Automated release created via GitHub Actions
            - Full changelog will be generated by GoReleaser
            
            ### Installation
            ```bash
            # Download latest release
            curl -L -o ukrainian-voice-transcriber https://github.com/idvoretskyi/ukrainian-voice-transcriber/releases/download/v${{ github.event.inputs.version }}/ukrainian-voice-transcriber_${{ github.event.inputs.version }}_linux_amd64.tar.gz
            tar -xzf ukrainian-voice-transcriber_${{ github.event.inputs.version }}_linux_amd64.tar.gz
            chmod +x ukrainian-voice-transcriber
            ```
            
            🇺🇦 Made with ❤️ for Ukrainian content creators
            
            ---
            
            **Note**: This is a preliminary release. Full release notes with binaries will be available shortly via GoReleaser.
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}

      - name: Notify success
        run: |
          echo "🎉 Release v${{ github.event.inputs.version }} created successfully!"
          echo "📦 GoReleaser will now build and publish the release artifacts"
          echo "🔗 Check the release at: https://github.com/idvoretskyi/ukrainian-voice-transcriber/releases/tag/v${{ github.event.inputs.version }}"