run:
  timeout: 5m
  modules-download-mode: readonly

linters:
  enable:
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - unused
    - typecheck
    - gofmt
    - goimports
    - misspell
    - gocritic
    - godot
    - whitespace
    - wsl
    - gocyclo
    - funlen
    - dupl
    - gosec
    - unconvert
    - unparam
    - prealloc
    - goconst
    - gomodguard
    - revive
    - exportloopref
    - nilerr
    - tenv
    - testpackage
    - tparallel
    - wastedassign
    - nlreturn
    - wrapcheck
    - lll
    - decorder
    - gocognit
    - goheader

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true
  
  govet:
    check-shadowing: true
    enable-all: true
  
  gofmt:
    simplify: true
  
  goimports:
    local-prefixes: github.com/idvoretskyi/ukrainian-voice-transcriber
  
  misspell:
    locale: US
  
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
  
  funlen:
    lines: 80
    statements: 40
  
  gocyclo:
    min-complexity: 15
  
  dupl:
    threshold: 100
  
  gosec:
    excludes:
      - G304 # Potential file inclusion via variable
      - G204 # Subprocess launched with variable
  
  lll:
    line-length: 120
  
  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - .Wrap(
      - .Wrapf(
  
  goheader:
    template: |-
      Ukrainian Voice Transcriber
      Copyright (c) {{ YEAR }} Ihor Dvoretskyi
      
      Licensed under MIT License

issues:
  exclude-rules:
    # Disable some linters for test files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - goconst
        - gocognit
        - lll
    
    # Disable some linters for main.go
    - path: cmd/
      linters:
        - wrapcheck
        - goheader
    
    # Disable some linters for CLI package
    - path: internal/cli/
      linters:
        - wrapcheck
        - lll
    
    # Ignore long lines in auto-generated code
    - path: ".*\\.pb\\.go"
      linters:
        - lll
    
    # Ignore long lines in documentation
    - path: ".*\\.md"
      linters:
        - lll
  
  # Maximum issues count per one linter
  max-issues-per-linter: 0
  
  # Maximum count of issues with the same text
  max-same-issues: 0
  
  # Show only new issues
  new: false
  
  # Fix issues automatically if possible
  fix: false

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true